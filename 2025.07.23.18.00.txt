2025.07.23 18.00

<!-- html/main.html -->
<!DOCTYPE html>
<html lang="ko">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Libra | Balancing Infrastructure</title>
  <link rel="stylesheet" href="../css/main.css">
</head>
<body>

  <!-- 공통 헤더 -->
  <div id="header-area"></div><!-- ID 고정 -->

  <!-- Main Content -->
  <main>
    <!-- Section 1: Hero Slider -->
    <section class="section slider" id="hero-slider">
    <div class="slides" id="slides">
     <div class="slide"><div class="placeholder-slide">Slide 1 </div></div>
     <div class="slide"><div class="placeholder-slide">Slide 2 </div></div>
     <div class="slide"><div class="placeholder-slide">Slide 3 </div></div>
    </div>
    <div class="arrow left"  id="prevBtn">&#10094;</div>
    <div class="arrow right" id="nextBtn">&#10095;</div>
  </section>



    <!-- Section 2: Three-Column Links -->
  <section class="section subgrid" id="quick-links">
     <div class="sub" id="link-predict-env"><div class="sub-title">환경 점수 예측</div></div>
     <div class="sub" id="link-convert-score"><div class="sub-title">점수 변환 예측</div></div>
     <div class="sub" id="link-login-only"><div class="sub-title">로그인 전용</div></div>
   </section>
 

   <!-- Chatbot Window -->
  <div class="chat-window" id="chatWindow"><!-- ID 고정 -->
    <div class="chat-header">
      <span>AI Chat</span>
      <button id="chatCloseBtn" aria-label="Close">&times;</button>
    </div>
    <div class="chat-body" id="chatBody"><!-- ID 고정 -->
      <!-- 메시지 쌓임 -->
    </div>
    <div class="chat-input">
      <input type="text" id="chatInput" placeholder="메시지를 입력하세요…" />
      <button id="chatSendBtn">전송</button>
    </div>
  </div>
 </main>
 
<!-- 공통 푸터 -->
    <div id="footer-area"></div>

  <script src="../js/main.js"></script>
</body>
</html>
===================================
===================================
// js/main.js
window.addEventListener('DOMContentLoaded', () => {
  // 1) 헤더·푸터 인클루드
  fetch('../html/header.html')
    .then(r => r.text())
    .then(html => document.getElementById('header-area').innerHTML = html);
  fetch('../html/footer.html')
    .then(r => r.text())
    .then(html => document.getElementById('footer-area').innerHTML = html);

  // 2) 슬라이더 로직
  let idx = 0;
  const slides = document.getElementById('slides');
  const total  = slides.children.length;
  const prevBtn = document.getElementById('prevBtn');
  const nextBtn = document.getElementById('nextBtn');

  function goToSlide(i) {
    idx = (i + total) % total;
    slides.style.transform = `translateX(${-100 * idx}%)`;
  }

  // 버튼 클릭 바인딩 (ID 없으면 동작 안 함 → 위에서 추가)
  prevBtn.addEventListener('click', () => goToSlide(idx - 1));
  nextBtn.addEventListener('click', () => goToSlide(idx + 1));

  // ★6초 간격으로 자동 전환★
  setInterval(() => goToSlide(idx + 1), 6000);

  // 3) 챗봇 토글·닫기·전송
  const chatToggle   = document.getElementById('chatToggle');
  const chatWindow   = document.getElementById('chatWindow');
  const chatCloseBtn = document.getElementById('chatCloseBtn');
  const chatBody     = document.getElementById('chatBody');
  const chatInput    = document.getElementById('chatInput');
  const chatSendBtn  = document.getElementById('chatSendBtn');

  chatToggle.addEventListener('click', () => {
    chatWindow.classList.toggle('open');
    if (chatWindow.classList.contains('open')) chatInput.focus();
  });
  chatCloseBtn.addEventListener('click', () => {
    chatWindow.classList.remove('open');
  });

  function sendMessage() {
    const text = chatInput.value.trim();
    if (!text) return;
    const userMsg = document.createElement('div');
    userMsg.className = 'chat-msg user';
    userMsg.textContent = text;
    chatBody.appendChild(userMsg);

    // TODO: 실제 챗봇 API 호출 로직 삽입
    const botMsg = document.createElement('div');
    botMsg.className = 'chat-msg bot';
    botMsg.textContent = '응답 준비중…';
    chatBody.appendChild(botMsg);

    chatBody.scrollTop = chatBody.scrollHeight;
    chatInput.value = '';
    chatInput.focus();
  }

  chatSendBtn.addEventListener('click', sendMessage);
  chatInput.addEventListener('keydown', e => {
    if (e.key === 'Enter') {
      e.preventDefault();
      sendMessage();
    }
  });
});
===================================================
======================================================
=====================================================
/* ../css/main.css */
/* Reset & 공용 스타일 */
/* TODO: px→rem, width/height→vw/vh 통일 */
:root {
  --color-bg-header: #010002;
  --color-footer-bg: #0d1f2d;
  --color-logo-text: lab(93.13% -25.51 -8.16);
  --color-body-bg: #0b5264;
  --color-nav-text: #0c3f2f;
  --color-highlight: #204461;
  --clolr-text-shadow: #2e1b8388;
  --font-sans: 'Noto Sans KR', sans-serif;
}

* { box-sizing: border-box; margin: 0; padding: 0; }
 html, body {
      height: 100%;
      margin: 0;
      overflow-y: scroll;
      scroll-snap-type: y mandatory;
      scroll-behavior: smooth;
    }
    body { font-family: sans-serif; }
    a { text-decoration: none; color: inherit; }

/* Header */
#site-header {
  position: absolute; top: 0; left: 0;
  width: 100%; padding: 1rem 2rem;
  background: transparent; color: #fff;
  display: flex; align-items: center;
  z-index: 10;
}
#site-header .logo { display: flex; align-items: center; cursor: pointer; }
#site-header .logo img { height: 4.0rem; }
#site-header .logo span { 
  color: lab(69.67% -15.03 -23.49);    /* ← 로고 아이콘 색과 동일하게 */
  font-size: 1.5rem; font-weight: bold; margin-left: 0.5rem; }
#site-header nav { margin-left: auto;  margin-right: 2cm;}
#site-header .nav-link {
  margin-left: 2rem; 
  transition: color .2s;  color: inherit;
  text-decoration: none;    /* 기본 밑줄 제거 */
}
#site-header .nav-link:hover { color: lab(69.67% -15.03 -23.49); }


/* 섹션 공통 */
/* TODO: 여기에 헤더·슬라이더·서브그리드·챗봇·푸터 스타일을 rem/vw/vh로 채워 넣기 */
.section {
  width: 100vw;
  height: 100vh;
  scroll-snap-align: start;
  position: relative;
  overflow: hidden;
}

/* HERO SLIDER */
.slider {
  position: relative;    /* overflow:visible 위해서 */
  overflow: visible;     /* 양쪽 arrow가 잘리지 않도록 */
  display: flex;
}
.slides { display: flex; width: 300%; height: 100%; transition: transform .6s ease; }
.slide { flex: 1 0 100%; }
.placeholder-slide {
  width: 100vw;
  height: 100vh;
  background: #111;
  color: #fff;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 2rem;
}
.arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  background: rgba(0,0,0,0.4);
  color: #fff;
  padding: 0.5rem;
  cursor: pointer;
  z-index: 20;
}
.arrow.left { left: 1rem; }
.arrow.right { right: 1rem; }



/* Three-column */
.subgrid {
  display: flex; width: 100vw; height: 100vh;
}
.sub {
  flex: 1;  position: relative; cursor: pointer;
}
.sub:nth-child(1) { background: #add8e6; }
.sub:nth-child(2) { background: #7a5656; }
.sub:nth-child(3) { background: #f5a623; }
.sub-title {
  position: absolute; bottom: 1rem; left: 1rem;
  color: #fff; font-size: 1.2rem;
}
.sub:hover { opacity: 0.9; }

/* Footer */
#site-footer {
  position: absolute; bottom: 0;
  width: 100vw; text-align: center;
  padding: 1rem 0; background: #0d1f2d; color: #fff;
  scroll-snap-align: start; /* 원하면 스크롤 스냅만 유지 */
}


/* Chatbot */
.chatbot {
  position: fixed; bottom: 1rem; right: 1rem;
  z-index: 30; cursor: pointer; /* 클릭 포인터 유지 */
}
.chat-icon {
  width: 3.75rem;    /* 60px */
  height: 3.75rem;   /* 60px */
  overflow: hidden; border-radius: 50%;/* 원형 유지 */
}
#chatbot-img {
  width: 100%; height: 100%; object-fit: contain;
}
/* chat-Body: 스크롤 가능한 대화 영역 */
.chat-body {
  flex: 1; padding: 0.5rem;
  overflow-y: auto; background: #f9f9f9;
}
.chat-window {
  position: fixed; bottom: 1rem; right: 1rem;
  width: 18.75rem;      /* 300px */
  height: 80vh;         /* 화면 높이의 80% */
  background: #fff; 
  box-shadow: -2px 2px 10px rgba(202, 25, 25, 0.2);
  display: flex; flex-direction: column;
  transform: translateY(100%);
  transition: transform .3s ease-in-out;
  z-index: 29;
}
.chat-window.open {
  transform: translateY(0);    /* 열릴 때 제자리로 */
}
/* chat-Header: 제목 + 닫기 */
.chat-header {
  background: #009fe3;
  color: #85e3f3;
  padding: .5rem;
  display: flex;
  justify-content: space-between;
  align-items: center;
}
#chatCloseBtn {
  background: none; border: none;
  color: #fff; font-size: 1.2rem; cursor: pointer;
}
/* Input: 고정 하단 */
.chat-input {
  display: flex; border-top: 1px solid #ddd;
}
#chatInput {
  flex: 1; border: none;
  padding: 0.5rem; font-size: 0.9rem;
}
#chatInput:focus { outline: none;}
#chatSendBtn {
  padding: 0.75rem; border: none;
  background: #009fe3; color: #fff;
  cursor: pointer;
}
#chatSendBtn:hover {background: #007bb5;}



/* Responsive */
@media(max-width:768px) {
  #site-header .nav-link { margin-left: 1rem; font-size: .9rem; }
  .arrow { padding: .3rem; }
}

==================================================================
=====================================================
====================================================
<!-- html/footer.html -->
<footer id="site-footer"><!-- ID 고정 영역 -->
  &copy; 2025 Libra. All rights reserved.
</footer>
=======================================================
<!-- html/header.html -->
<header id="site-header"><!-- ID 고정 영역 -->
  <div class="logo" id="logo-area"><!-- ID 고정 영역 -->
    <img src="../images/logo.jpeg" alt="Libra Logo" id="logo-img"><!-- ID 고정 영역 -->
    <span id="logo-text">Libra</span><!-- ID 고정 영역 -->
  </div>
  <nav id="main-nav"><!-- ID 고정 영역 -->
    <a href="#analysis" class="nav-link">학습환경 분석</a>
    <a href="#progress" class="nav-link">발전도 분석</a>
    <a href="#login" class="nav-link">Login</a>
  </nav>
</header>
